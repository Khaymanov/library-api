–ö–æ–Ω–µ—á–Ω–æ! –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º **–ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è POST-–∑–∞–ø—Ä–æ—Å–∞** –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `POST /books`) –≤ —Ç–≤–æ—ë–º –ø—Ä–æ–µ–∫—Ç–µ `nodejs-mysql-api`, –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è:

* Node.js + Express
* Sequelize (MySQL)
* Winston (–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
* Swagger (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)
* Elasticsearch + Kibana (–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è)

---

## üîó –¶–µ–ø–æ—á–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ `POST /books`

### üìÅ 1. `index.js` ‚Äî **–≤—Ö–æ–¥–Ω–∞—è —Ç–æ—á–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è**

* –ó–∞–ø—É—Å–∫–∞–µ—Ç Express-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (`const app = express()`)
* –ü–æ–¥–∫–ª—é—á–∞–µ—Ç `routes`
* –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä
* –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –ª–æ–≥–≥–µ—Ä `const logger = require('./logger/logger')`
* –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É —á–µ—Ä–µ–∑ Sequelize

> üìç –ï—Å–ª–∏ –ª–æ–≥–≥–µ—Ä –ø–æ–¥–∫–ª—é—á—ë–Ω ‚Äî –ª—é–±—ã–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∑–¥–µ—Å—å.

---

### üìÅ 2. `routes/book.routes.js`

* –ó–¥–µ—Å—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –º–∞—Ä—à—Ä—É—Ç:

  ```js
  router.post('/', bookController.createBook);
  ```
* –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫:

  ```js
  module.exports = (app) => {
    app.use('/books', router);
  };
  ```
* –ó–Ω–∞—á–∏—Ç, `POST /books` –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é `createBook` –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ.

---

### üìÅ 3. `controllers/book.controller.js`

* –ó–¥–µ—Å—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫:

  ```js
  exports.createBook = async (req, res) => {
    const { title, authorId } = req.body;
    ...
    const book = await Book.create({ title, authorId });
    logger.info('–ö–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞: ' + title);
    res.status(201).json(book);
  };
  ```
* –¢—É—Ç –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–æ–¥–µ–ª—å `Book` –∏–∑ `models/book.model.js`

---

### üìÅ 4. `models/book.model.js`

* –û–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ Sequelize:

  ```js
  const Book = sequelize.define('Book', { ... });
  ```
* –û–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å —Ç–∞–±–ª–∏—Ü–µ–π `books` –≤ MySQL
* –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ `Book.create(...)` —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å:

  ```sql
  INSERT INTO books (title, authorId, createdAt, updatedAt) VALUES (...)
  ```

---

### üìÅ 5. `logger/logger.js`

* –í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è:

  ```js
  logger.info(...) // –∏–ª–∏ .error(...)
  ```
* Winston –ø–∏—à–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å **–∏** –≤ Elasticsearch
* –≠—Ç–∏ –ª–æ–≥–∏ –ø–æ—Ç–æ–º –ø–æ–ø–∞–¥–∞—é—Ç –≤ Kibana –ø–æ –∏–Ω–¥–µ–∫—Å—É `logs-*`

---

### üìÅ 6. `swagger.yaml` (–∏–ª–∏ OpenAPI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è)

* –°–æ–¥–µ—Ä–∂–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ:

  ```yaml
  /books:
    post:
      summary: –°–æ–∑–¥–∞—Ç—å –∫–Ω–∏–≥—É
      ...
  ```
* Swagger UI –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å `POST /books` –ø—Ä—è–º–æ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞

---

## üß≠ –°–≤—è–∑–∏ –º–µ–∂–¥—É —Ñ–∞–π–ª–∞–º–∏

```
index.js
 ‚îú‚îÄ‚îÄ routes/book.routes.js
 ‚îÇ     ‚îî‚îÄ‚îÄ controllers/book.controller.js
 ‚îÇ              ‚îú‚îÄ‚îÄ models/book.model.js
 ‚îÇ              ‚îî‚îÄ‚îÄ logger/logger.js (Winston)
 ‚îî‚îÄ‚îÄ swagger.yaml (–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è Swagger UI)
```

---

## üí° –ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

**–ö–ª–∏–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:**

```http
POST /books
Content-Type: application/json

{
  "title": "–í–æ–π–Ω–∞ –∏ –º–∏—Ä",
  "authorId": 1
}
```

**–¶–µ–ø–æ—á–∫–∞:**
`index.js` ‚Üí `routes/book.routes.js` ‚Üí `book.controller.js.createBook()` ‚Üí `Book.create()` ‚Üí SQL ‚Üí –û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É + –ª–æ–≥ –≤ Elasticsearch

---

–•–æ—á–µ—à—å, —Å–¥–µ–ª–∞—é —Å—Ö–µ–º—É/–¥–∏–∞–≥—Ä–∞–º–º—É —ç—Ç–æ–π —Ü–µ–ø–æ—á–∫–∏?
